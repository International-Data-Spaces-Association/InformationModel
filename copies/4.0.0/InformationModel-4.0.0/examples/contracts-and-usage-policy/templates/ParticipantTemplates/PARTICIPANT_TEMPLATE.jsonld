// _:ParticipantTemplate
// ------------------

// The ParticipantTemplate is a RegEx-like representation of the possible forms, which can be inserted at the Participant position in an IDS Usage Control Template.

(
  { "@id": "?ParticipantUri" }                                      // directly insert the Participant URI, if known
| // or
  {
    "@type": "ids:Participant",
    "ids:memberParticipant": { "@id": "?Participant" }               // reference to a well-known Collection of Participants which is hosted at the given URI or a well-known PIP/PDP can decide whether or not a specific Participant is in the Collection or not. For instance, a department can be a memberParticipant of a company.
  }
| // or
  {
    "@type": "ids:Participant",                           // a Collection with exactly one condition to describe its members
    "ids:participantRefinement": [
      {
        "@type": "ids:Constraint",                                  // Define a collection of data objects which, for instance, all have an explicit attribute "color":"blue"
        "ids:leftOperand": { "@id": "?IdscLeftOperand" },           // The feature of interest, for instance ?IdscLeftOperand := idsc:PATH
        "ids:operator": { "@id": "?IdscBinaryOperator" },           // The kind of check, which shall be executed on the feature of interest, for instance ?IdscBinaryOperator := idsc:STRING_EQ
        "ids:rightOperand": { "@id": "?Value" }                     // The value expression all members of this collection have to share, for instance ?Value := "blue"
        (, "ids:pipEndpoint": { "@id": "?AttributeLocation"} )?     // A URI or path expression to the target attribute, ?AttributeLocation := "//color"
        (, "ids:unit": { "@id": "?Unit" } )?                        // A unit which may further explain the ?Value, for instance <http://dbpedia.org/resource/Color>.
      }
    ]
  }
| // or
  {
    "@type": "ids:Participant",
    "ids:participantRefinement": [
      {
        "@type": "ids:LogicalConstraint",                           // A Collection with more than one condition to describe its members.
        "?IdsOperand": {                                            // The operand to connect the constraints, for instance ?IdsOperand := idsc:OR
          "@list": [                                                // LogicalConstraints allow the expression of alternatives. For instance, we can select which have "color":"blue" OR "color":"green"
            (
              {
                "@type": "ids:Constraint",
                "ids:leftOperand": { "@id": "?IdscLeftOperand" },
                "ids:operator": { "@id": "?IdsBinaryOperator" },
                "ids:rightOperand": { "@id": "?Value" }
                (, "ids:pipEndpoint": { "@id": "?AttributeLocation" } )?
                (, "ids:unit": { "@id": "?Unit" } )?
              }
            ){2,} // at least two constraints
          ]
        }
      }
    ]
  }
)
