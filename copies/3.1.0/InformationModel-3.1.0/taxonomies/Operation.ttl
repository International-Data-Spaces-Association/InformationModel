@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix ids: <https://w3id.org/idsa/core/> .
@prefix idsm: <https://w3id.org/idsa/metamodel/> .

# Classes
# -------

# Abstract super-classes Command and Query based on "Reactive Design Patterns" by Roland Kuhn
# Note, definition misses the REST-like distinction of (not) "safe" and (not) "idempotent"
#
ids:CommandOperation
    a owl:Class ;
    rdfs:subClassOf ids:Operation ;
    rdfs:label "Command"@en ;
    rdfs:comment "Mutating operation that changes the internal state of the providing component."@en ;
    idsm:abstract true .

ids:QueryOperation
    a owl:Class ;
    rdfs:subClassOf ids:Operation ;
    rdfs:label "Query"@en ;
    rdfs:comment "Reading operation considered 'safe' by not affecting the state of the provising component."@en ;
    idsm:abstract true .

# Abstract functionality only, enhances a content mediating operation
# Mandatory input parameters of type „SortOrder“, „Sort Key“
#
ids:SortingOperation
    a owl:Class ;
    rdfs:subClassOf ids:ListOperation ; # Requires a List result
    rdfs:label "Sorting operation "@en ;
    rdfs:comment "Operation allowing for sorting of an underlying List."@en ;
    idsm:abstract true .

# Content pagination governed by client
# Mandatory input parameters of type „Offset“ and „Limit“
#
ids:ClientPaginatingOperation
    a owl:Class ;
    rdfs:subClassOf ids:ListOperation ; # Requires a List result
    rdfs:label "Client paginating operation"@en ;
    rdfs:comment "Operation allowing the Client for custom pagination of underlying list."@en ;
    idsm:abstract true .

# Content pagination governed by server
# Mandatory input parameter of type „PageIndex"
#
ids:ServerAbsolutePaginatingOperation
    a owl:Class ;
    rdfs:subClassOf ids:ListOperation ; # Requires a List result
    rdfs:label "Server-side absolute paginating operation "@en ;
    rdfs:comment "Operation allowing the Client to navigate list content based on index of Server-defined sections."@en ;
    idsm:abstract true .

# Mandatory input parameter of type "PageReference" (first, last, previous, next)
ids:ServerRelativePaginatingOperation
    a owl:Class ;
    rdfs:subClassOf ids:ListOperation ; # Requires a List result
    rdfs:label "Server-side relative paginating operation "@en ;
    rdfs:comment "Operation allowing the Client to navigate list content by references to Server-defined sections."@en ;
    idsm:abstract true .

# Operation types with (more or less) defined content parameters
# Mandatory output type: List
#
ids:ListOperation
    a owl:Class ;
    rdfs:subClassOf ids:QueryOperation ;
    rdfs:label "List operation"@en ;
    rdfs:comment "Operation exposing a list (ordered collection) of Digital Content."@en .

# Add mandatory input "parameter name" to introspect
ids:ListParameterValuesOperation # former name: "Query parameter range"
    a owl:Class ;
    rdfs:subClassOf ids:ListOperation ;
    rdfs:label "List parameter values operation"@en ;
    rdfs:comment "Operation used by a (potential) Data Consumer to retrieve (a dynamically generated) enumeration of input parameter values (its enumerated value domain); suitable for use cases in which the complete parameter range cannot be specified beforehand."@en.

# Additional restriction on type of considered parameter applies - must be of "Identifier"
ids:ListIdentifiersOperation
    a owl:Class ;
    rdfs:subClassOf ids:ListParameterValuesOperation ;
    rdfs:label "List identifiers"@en ;
    rdfs:comment "Operation used to retrieve the enumeration of available values for an 'Identifier' Parameter type. Depending on the type of underlying Resource collection, the identifier may be a unique name (map) or a numeric index (list); the Data Consumer may use the identifier for a subsequent call to 'Read' operation."@en.

# Clarify input parameter, e.g. identifier of a Collection Resource?
ids:ListContentOperation # former name: List data
    a owl:Class ;
    rdfs:subClassOf ids:ListOperation ;
    rdfs:label "List content operation"@en ;
    rdfs:comment "Operation used by a Data Consumer to retrieve an enumeration of Collection's contents."@en.

# Requires a mandatory input parameter of the “Filter” type (for example, an LDAP filter)
# IN: Filter, OUT List<Resorce>, list of matching Resources
# - on mandatoryInput someValues FilterParameter
# - on output someValues [ ContentParameter, on contentList allValuesFrom Content ]
#
ids:FilterContentOperation # former name: Filter data
    a owl:Class ;
    rdfs:subClassOf ids:ListContentOperation ;
    rdfs:label "Filter content operation"@en ;
    rdfs:comment "Operation provides the Data Consumer with a selection of a Collection contents according to supplied Filter Parameter. The Filter is applied to 'structured' Resource content or file properties of Artifatcs (such as file extension, file name, file type, etc.)."@en ;
    idsm:rationale "Extends ids:ListContentOperation, since filtering upon entire Digital Contents which definition still applies."@en.

# Compared to ListResources only incomplete, selective fragments are provided which definition can't be provided beforehand
# i.e. the output of the opetration is undefined, since based on user selection (no representation / schema etc.)
# - mandatoryInput some Selector, some Identifier (Resource or Collection)
# - output  [ ContentParameter, on contentList allValuesFrom Content ]
#
ids:SelectContentOperation # former name: Select data
    a owl:Class ;
    rdfs:subClassOf ids:QueryOperation ; # or ids:ListResourcesOperation ?
    rdfs:label "Select content operation"@en ;
    rdfs:comment "Operation provides the Data Consumer with custom fragments of the original Collection according to supplied 'Selector' Parameter. The Selector is applied to 'structured' Resource content."@en ;
    idsm:rationale "Extends ids:QueryOperation, since content selection is driven by user-provided logic and can hardly be defined at description time"@en.

# Clien-driven PULL-request, expects input paramter of type "Identifier",
# Additional restriction on the output parameter type applies - must be of type "Resource"
#
ids:ProvideContentOperation # former name: Provide data
    a owl:Class ;
    rdfs:subClassOf ids:QueryOperation ;
    rdfs:label "Provide content operation"@en ;
    rdfs:comment "Operation for providing a single Resource content via an operation’s output parameter from the Data Provider to the Data Consumer."@en.

# Clien-driven SUBSCRIBE-request, mandatory input of type Subscription
# Unused at moment: same as WriteOperation from client-perspective, given a previous subscription has identified the channel
#
#ids:SubscribeOperation
#    a owl:Class ;
#    rdfs:subClassOf ids:CommandOperation ; # affects Provider's state, requests to persist and subsequently execute the Subscription
#    rdfs:label "Subscribe operation"@en ;
#    rdfs:comment "Operation for receiving data via the operation’s input parameter(s) from the Data Provider to the Data Consumer."@en.

# Has a mandatory input parameter of type DigitalContent, optional input of type Identifier (PUT), otherwise the identifier is generated (POST)
# Server-driven PUSH-request
#
ids:ConsumeContentOperation # former name: Consume data
    a owl:Class ;
    rdfs:subClassOf ids:CommandOperation ; # since chnages the Collection's state
    rdfs:label "Consume content operation"@en ;
    rdfs:comment "Operation for receiving data via the operation’s input parameter(s) from the Data Provider to the Data Consumer."@en.

ids:ProcessContentOperation
    a owl:Class ;
    rdfs:subClassOf ids:Operation ;
    rdfs:label "Process content operation"@en ;
    rdfs:comment "Operation for processing of digital content via operation’s IO parameter(s)."@en.
