// _:ActionTemplate
// ------------------

// The ActionTemplate is a RegEx-like representation of the possible forms, which can be inserted at the Action position in an IDS Usage Control Template.

(
  { "@id": "?ActionUri" }                                       // directly insert the Action URI, if known
| // or
  {
    "@type": "odrl:Action",                                      // a Collection with exactly one condition to describe the Action
    "ids:includedIn": { "@id": "?ActionUri"},                   // The general Action, which is further constrained. For instance an idsc:WRITE is only possible if an attribute "color" is equals to "blue"
    "ids:actionRefinement": [
      {
        "@type": "odrl:Constraint",                              // Define a collection of data objects which, for instance, all have an explicit attribute "color":"blue"
        "odrl:leftOperand": { "@id": "?IdscLeftOperand" },       // The feature of interest, for instance ?IdscLeftOperand := idsc:PATH
        "odrl:operator": { "@id": "?IdscBinaryOperator" },       // The kind of check, which shall be executed on the feature of interest, for instance ?IdscBinaryOperator := idsc:STRING_EQ
        "odrl:rightOperand": { "@id": "?Value" }                 // The value expression all members of this collection have to share, for instance ?Value := "blue"
        (, "ids:pipEndpoint": { "@id": "?AttributeLocation"} )? // A URI or path expression to the target attribute, ?AttributeLocation := "//color"
        (, "ids:unit": { "@id": "?Unit" } )?                    // A unit which may further explain the ?Value, for instance <http://dbpedia.org/resource/Color>.
      }
    ]
  }
| // or
  {
    "@type": "odrl:Action",
    "ids:includedIn": { "@id": "?ActionUri"},
    "ids:actionRefinement": [
      {
        "@type": "odrl:LogicalConstraint",                           // A Collection with more than one condition to describe its members.
        "?IdscOperand": {                                            // The operand to connect the constraints, for instance ?IdscOperand := idsc:OR
          "@list": [                                                // LogicalConstraints allow the expression of alternatives. For instance, we can select which have "color":"blue" OR "color":"green"
            (
              {
                "@type": "odrl:Constraint",
                "odrl:leftOperand": { "@id": "?IdscLeftOperand" },
                "odrl:operator": { "@id": "?IdsBinaryOperator" },
                "odrl:rightOperand": { "@id": "?Value" }
                (, "ids:pipEndpoint": { "@id": "?AttributeLocation" } )?
                (, "ids:unit": { "@id": "?Unit" } )?
              }
            ){2,} // at least two constraints
          ]
        }
      }
    ]
  }
)
