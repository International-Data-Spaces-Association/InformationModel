@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix ids: <https://w3id.org/idsa/core/> .
@prefix idsc: <https://w3id.org/idsa/code/> .

# idsc:CONSTRAINT_TEMPLATE
# ---------

# The CONSTRAINT_TEMPLATE is a RegEx-like representation of the possible forms, which can be inserted at the Constraint position in an IDS Usage Control Template.

(
    [
        a ids:Constraint ;                                  # Constraint
        ids:leftOperand ?IdscLeftOperand ;                  # The feature of interest, for instance ?IdscLeftOperand := idsc:PAY_AMOUNT
        ids:operator ?IdscBinaryOperator ;                  # The kind of check, which shall be executed on the feature of interest, for instance ?IdscBinaryOperator := idsc:EQ
        ids:rightOperand ?Value ;                           # The value expression all members of this collection have to share, for instance ?Value := "5"
        ( ids:pipEndpoint ?AttributeLocation ; )?       # A URI or path expression to the target attribute, ?AttributeLocation := <https://bank.com/bankaccount>
        ( ids:unit ?Unit ; )?                               # A unit which may further explain the ?Value, for instance <http://dbpedia.org/resource/Euro>.
    ]
| # or
    [
        a ids:LogicalConstraint ;                       # A Collection with more than one condition to describe its members.
        ?IdsOperand                                     # The operand to connect the constraints, for instance ?IdsOperand := idsc:OR
            ( # '(' is used as an RDF List operator here
                (                                       # LogicalConstraints allow the expression of alternatives. For instance, we can select all combine "idsc:PAY_AMOUNT":"5â‚¬" OR "idsc:PAY_AMOUNT":"4$"
                    a ids:Constraint ;
                    ids:leftOperand ?IdscLeftOperand ;
                    ids:operator ?IdsBinaryOperator ;
                    ids:rightOperand ?Value ;
                    ( ids:pipEndpoint ?AttributeLocation ; )?
                    ( ids:unit ?Unit ; )?
                ){2,} # at least two constraints
            ) # ')' is used as an RDF List operator here
    ]
)
