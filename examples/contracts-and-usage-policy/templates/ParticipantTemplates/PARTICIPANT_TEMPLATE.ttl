@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix odrl: <http://www.w3.org/ns/odrl/2/> .
@prefix ids: <https://w3id.org/idsa/core/> .
@prefix idsc: <https://w3id.org/idsa/code/> .

# idsc:PARTICIPANT_TEMPLATE
# ---------

# The PARTICIPANT_TEMPLATE is a RegEx-like representation of the possible forms, which can be inserted at the Participant position in an IDS Usage Control Template.

(
    ?ParticipantUri                                         # directly insert the Participant URI, if known
| # or
    [
        a ids:Participant ;
        ids:memberParticipant ?Participant ;                     # reference to a well-known Collection, which is hosted at the given URI or a well-known PIP/PDP can decide whether or not a specific Participant is in the Collection or not
    ]
| # or
    [
        a ids:Participant ;
        ids:participantRefinement [                         # a Collection with exactly one condition to describe its members
            a odrl:Constraint ;                              # Define a collection of data objects which, for instance all have an explicit attribute "role":"ADMIN"
            odrl:leftOperand ?IdscLeftOperand ;              # The feature of interest, for instance ?IdscLeftOperand := idsc:PATH
            odrl:operator ?IdscBinaryOperator ;              # The kind of check, which shall be executed on the feature of interest, for instance ?IdscBinaryOperator := idsc:STRING_EQ
            odrl:rightOperand ?Value ;                       # The value expression all members of this collection have to share, for instance ?Value := "ADMIN"
            ( ids:pipEndpoint ?AttributeLocation ; )?   # A URI or path expression to the target attribute, ?AttributeLocation := "//role"
            ( odrl:unit ?Unit ; )?                           # A unit which may further explain the ?Value
        ]
    ]
| # or
    [
        a ids:Participant ;
        ids:participantRefinement [
            a odrl:LogicalConstraint ;                       # A Collection with more than one condition to describe its members.
            ?IdsOperand                                     # The operand to connect the constraints, for instance ?IdsOperand := idsc:OR
                ( # '(' is used as an RDF List operator here
                    (                                       # LogicalConstraints allow the expression of alternatives. For instance, we can select which have "role":"ADMIN" OR "role":"MANAGER"
                        a odrl:Constraint ;
                        odrl:leftOperand ?IdscLeftOperand ;
                        odrl:operator ?IdsBinaryOperator ;
                        odrl:rightOperand ?Value ;
                        ( ids:pipEndpoint ?AttributeLocation ; )?
                        ( odrl:unit ?Unit ; )?
                    ){2,} # at least two constraints
                ) # ')' is used as an RDF List operator here
        ]
    ]
)
