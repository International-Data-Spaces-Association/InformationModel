@prefix dash: <http://datashapes.org/dash#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ids: <https://w3id.org/idsa/core/> .


ids:BaseConnectorUpgradeShape
	a sh:NodeShape ;
	sh:targetClass ids:BaseConnector ;
	sh:rule [
		a sh:SPARQLRule ;
		sh:prefixes ids: ;
		sh:construct """
		prefix dash: <http://datashapes.org/dash#>
		prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
		prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		prefix schema: <http://schema.org/>
		prefix sh: <http://www.w3.org/ns/shacl#>
		prefix xsd: <http://www.w3.org/2001/XMLSchema#>
		prefix ids: <https://w3id.org/idsa/core/>
		prefix idsc: <https://w3id.org/idsa/code/>
		prefix idsm: <https://w3id.org/idsa/metamodel/>

		CONSTRUCT {
			$this ids:resourceCatalog $catalog .
			idsm:VersionUpgrade ids:catalog $catalog .
		}
		WHERE {
			OPTIONAL {$this ids:catalog $catalog .}
		}
		""" ;
			sh:condition ids:BaseConnector ;    # Rules only apply if the input matches the respective shape
	] ;
.


ids:CatalogUpgradeShape1
	a sh:NodeShape ;
	sh:targetClass ids:Catalog ;
	sh:rule [
		a sh:SPARQLRule ;
		sh:prefixes ids: ;
		sh:construct """
		prefix dash: <http://datashapes.org/dash#>
		prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
		prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		prefix schema: <http://schema.org/>
		prefix sh: <http://www.w3.org/ns/shacl#>
		prefix xsd: <http://www.w3.org/2001/XMLSchema#>
		prefix ids: <https://w3id.org/idsa/core/>
		prefix idsc: <https://w3id.org/idsa/code/>
		prefix idsm: <https://w3id.org/idsa/metamodel/>

		CONSTRUCT {
			$this rdf:type ids:ResourceCatalog .
			idsm:VersionUpgrade rdf:type ids:catalog .			
		}
		WHERE {$this rdf:type ids:catalog .}
		""" ;
			sh:condition ids:Catalog ;    # Rules only apply if the input matches the respective shape
	] ;
.

ids:CatalogUpgradeShape2
	a sh:NodeShape ;
	sh:targetClass ids:Catalog ;
	sh:rule [
		a sh:SPARQLRule ;
		sh:prefixes ids: ;
		sh:construct """
		prefix dash: <http://datashapes.org/dash#>
		prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
		prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		prefix schema: <http://schema.org/>
		prefix sh: <http://www.w3.org/ns/shacl#>
		prefix xsd: <http://www.w3.org/2001/XMLSchema#>
		prefix ids: <https://w3id.org/idsa/core/>
		prefix idsc: <https://w3id.org/idsa/code/>
		prefix idsm: <https://w3id.org/idsa/metamodel/>

		CONSTRUCT {
			$this ids:offeredResources $offeredResources .
			idsm:VersionUpgrade ids:offer $offeredResources .			
		}
		WHERE {$this ids:offer $offeredResources .}
		""" ;
			sh:condition ids:Catalog ;    # Rules only apply if the input matches the respective shape
	] ;
.

ids:CatalogUpgradeShape3
	a sh:NodeShape ;
	sh:targetClass ids:Catalog ;
	sh:rule [
		a sh:SPARQLRule ;
		sh:prefixes ids: ;
		sh:construct """
		prefix dash: <http://datashapes.org/dash#>
		prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
		prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		prefix schema: <http://schema.org/>
		prefix sh: <http://www.w3.org/ns/shacl#>
		prefix xsd: <http://www.w3.org/2001/XMLSchema#>
		prefix ids: <https://w3id.org/idsa/core/>
		prefix idsc: <https://w3id.org/idsa/code/>
		prefix idsm: <https://w3id.org/idsa/metamodel/>
		
		CONSTRUCT {
			$this ids:requestedResources $requestedResources .
			idsm:VersionUpgrade ids:request $requestedResources .			
		}
		WHERE {$this ids:request $requestedResources .}
		""" ;
			sh:condition ids:Catalog ;    # Rules only apply if the input matches the respective shape
	] ;
.



ids:ResourceUpgradeShape
	a sh:NodeShape ;
	sh:targetClass ids:Resource ;
	sh:rule [
		a sh:SPARQLRule ;
		sh:prefixes ids: ;
		sh:construct """
		prefix dash: <http://datashapes.org/dash#>
		prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
		prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		prefix schema: <http://schema.org/>
		prefix sh: <http://www.w3.org/ns/shacl#>
		prefix xsd: <http://www.w3.org/2001/XMLSchema#>
		prefix ids: <https://w3id.org/idsa/core/>
		prefix idsc: <https://w3id.org/idsa/code/>
		prefix idsm: <https://w3id.org/idsa/metamodel/>

		CONSTRUCT {
			$this rdf:type ids:ConnectorEndpoint .
			idsm:VersionUpgrade rdf:type ids:StaticEndpoint .
			
			$staticEndpoint ids:accessUrl $accessUrl .
			idsm:VersionUpgrade ids:accessUrl $accessUrl .
		}
		WHERE {
			$this ids:resourceEndpoint $staticEndpoint .
			$staticEndpoint rdf:type ids:StaticEndpoint .
						
			OPTIONAL {
				$staticEndpoint ids:endpointHost $endpointHost .
				$this rdf:type ids:Host .
				$this ids:accessUrl $accessUrl .
			}
		}
		""" ;
			sh:condition ids:Resource ;    # Rules only apply if the input matches the respective shape
	] ;
.
